{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "SnackbarService",
            "id": "injectable-SnackbarService-4c38ab26a97b74abd84873dec2a5ac48383d36fb7de99d449d563d25ab83100302edbdf4a0e7002f6293f5c58eca8f9127828f7917c8394cc9c15a0887d8133f",
            "file": "src/app/snackbar.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "openSnackBar",
                    "args": [
                        {
                            "name": "messsage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "messsage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SnackbarService {\r\n  constructor(private matSkackBar: MatSnackBar) {}\r\n\r\n  openSnackBar(messsage: string) {\r\n    this.matSkackBar.open(messsage, 'Close', {\r\n      duration: 3000,\r\n      horizontalPosition: 'right',\r\n      verticalPosition: 'top',\r\n      panelClass: ['bg-red-600'],\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matSkackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "matSkackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-76b0cff873e50afd2fe32ef314691cf4854b889c9a2fa77f477f48a2038ab1f5a18027d6266f5dc53eec48211393a3e80b22cccd5456da6f5bb69ccf3278c12f",
            "file": "src/app/user.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "`http://localhost:9000/users`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editUser",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUsers",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  apiUrl = `http://localhost:9000/users`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n  addUser(data: any) {\r\n    return this.http.post(`${this.apiUrl}`, data);\r\n  }\r\n  editUser(data: any) {\r\n    return this.http.put(`${this.apiUrl}/${data.id}`, data);\r\n  }\r\n\r\n  getUsers(url: string) {\r\n    return this.http.get(`${this.apiUrl}?${url}`);\r\n  }\r\n\r\n  getUserById(id: number) {\r\n    return this.http.get(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-4640f55e97e311f595f0319925283bcfd22cd8c79aa0fc4f6c1b4757e5c56a3a67cb74ca714914de6e3371db90c3e5833c4ecf3bd1ad6e32238586c13880cb60",
            "file": "src/app/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrl: './about.component.css'\r\n})\r\nexport class AboutComponent {\r\n\r\n}\r\n",
            "styleUrl": "./about.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>about works!</p>\r\n"
        },
        {
            "name": "AddUserComponent",
            "id": "component-AddUserComponent-ba55b5f2b831018051e8e2e6ad7dd0a45af1936964ff125fcc964ce91c2063e61684d0392b027601cb431012ac0f4457ec6bec5b593bc0a0a5b3d2f4ed3398bb",
            "file": "src/app/add-user/add-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-user",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./add-user.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "editData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "fb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormBuilder",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<AddUserComponent>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addExperience",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addSkill",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClose",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "populateForm",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeExperience",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeSkill",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { UserService } from '../user.service';\r\nimport { SnackbarService } from './../snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrl: './add-user.component.css',\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n  userForm!: FormGroup;\r\n  editData: any;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public ref: MatDialogRef<AddUserComponent>,\r\n    public fb: FormBuilder,\r\n    public userService: UserService,\r\n    private snackbarService: SnackbarService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userForm = this.fb.group({\r\n      id: [''],\r\n      name: [''],\r\n      email: [''],\r\n      phone: [''],\r\n      skills: this.fb.array([this.fb.control('')]),\r\n      experiences: this.fb.array([\r\n        this.fb.group({\r\n          company: [''],\r\n          duration: [''],\r\n          startDate: [''],\r\n          endDate: [''],\r\n        }),\r\n      ]),\r\n    });\r\n\r\n    if (this.data.id) {\r\n      this.userService.getUserById(this.data.id).subscribe((res) => {\r\n        this.editData = res;\r\n        console.log(res);\r\n        // this.userForm.setValue(res);\r\n        this.populateForm(res);\r\n      });\r\n    }\r\n  }\r\n\r\n  populateForm(user: any) {\r\n    this.userForm.patchValue({\r\n      name: user.name,\r\n      phone: user.phone,\r\n      email: user.email,\r\n      experiences: user.experiences,\r\n      skills: user.skills,\r\n      id: user.id,\r\n    });\r\n\r\n    // user.skills.forEach((skill: any) => this.addSkill());\r\n    // user.experiences.forEach((exp: any) => this.addExperience());\r\n  }\r\n\r\n  addSkill() {\r\n    this.skills.push(this.fb.control(''));\r\n  }\r\n\r\n  addExperience() {\r\n    this.experiences.push(\r\n      this.fb.group({\r\n        company: [''],\r\n        duration: [''],\r\n        startDate: [''],\r\n        endDate: [''],\r\n      })\r\n    );\r\n  }\r\n\r\n  removeExperience(index: number) {\r\n    this.experiences.removeAt(index);\r\n  }\r\n\r\n  removeSkill(index: number) {\r\n    this.skills.removeAt(index);\r\n  }\r\n\r\n  get skills() {\r\n    return this.userForm.get('skills') as FormArray;\r\n  }\r\n\r\n  get experiences() {\r\n    return this.userForm.get('experiences') as FormArray;\r\n  }\r\n\r\n  handleSubmit() {\r\n    console.log(this.userForm.value);\r\n\r\n    if (this.userForm.valid) {\r\n      if (this.userForm.value.id) {\r\n        this.userService.editUser(this.userForm.value).subscribe((res) => {\r\n          this.handleClose(true);\r\n          this.snackbarService.openSnackBar('Successfully Updated.');\r\n        });\r\n      } else {\r\n        this.userService.addUser(this.userForm.value).subscribe((res) => {\r\n          this.handleClose(true);\r\n          this.snackbarService.openSnackBar('Successfully Added.');\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleClose(value: boolean = false) {\r\n    this.ref.close(value);\r\n  }\r\n}\r\n",
            "styleUrl": "./add-user.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ref",
                        "type": "MatDialogRef<AddUserComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ref",
                        "type": "MatDialogRef<AddUserComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "skills": {
                    "name": "skills",
                    "getSignature": {
                        "name": "skills",
                        "type": "",
                        "returnType": "",
                        "line": 88
                    }
                },
                "experiences": {
                    "name": "experiences",
                    "getSignature": {
                        "name": "experiences",
                        "type": "",
                        "returnType": "",
                        "line": 92
                    }
                }
            },
            "templateData": "<h2 mat-dialog-title>{{ data?.title }} User</h2>\r\n<mat-dialog-content>\r\n  <form class=\"example-form\" [formGroup]=\"userForm\">\r\n    <mat-label>Name</mat-label>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <input matInput placeholder=\"Enter Name\" formControlName=\"name\" />\r\n    </mat-form-field>\r\n    <mat-label>Phone</mat-label>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <input matInput placeholder=\"Enter Phone\" formControlName=\"phone\" />\r\n    </mat-form-field>\r\n    <mat-label>Email</mat-label>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <input matInput placeholder=\"Enter Email\" formControlName=\"email\" />\r\n    </mat-form-field>\r\n\r\n    <div class=\"flex items-center justify-between mb-3\">\r\n      <mat-label>Skills</mat-label>\r\n      <button mat-flat-button color=\"primary\" (click)=\"addSkill()\">\r\n        Add Skill\r\n      </button>\r\n    </div>\r\n    <div formArrayName=\"skills\">\r\n      <div\r\n        *ngFor=\"let skill of skills.controls; let i = index\"\r\n        class=\"flex items-center gap-2\"\r\n      >\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Skill\" [formControlName]=\"i\" />\r\n        </mat-form-field>\r\n        <button mat-flat-button color=\"warn\" (click)=\"removeSkill(i)\">\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div formArrayName=\"experiences\">\r\n      <div class=\"flex items-center justify-between mb-3\">\r\n        <h1 class=\"mb-2 text-lg font-semibold\">Experience</h1>\r\n        <button mat-flat-button color=\"primary\" (click)=\"addExperience()\">\r\n          Add Experience\r\n        </button>\r\n      </div>\r\n      <div\r\n        *ngFor=\"let expGroup of experiences.controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <mat-label>Company Name</mat-label>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input\r\n            matInput\r\n            placeholder=\"Company Name\"\r\n            formControlName=\"company\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-label>Duration</mat-label>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Duration\" formControlName=\"duration\" />\r\n        </mat-form-field>\r\n        <div class=\"flex gap-2\">\r\n          <div class=\"w-full\">\r\n            <mat-label>Start Date</mat-label>\r\n            <br />\r\n            <mat-form-field class=\"w-full\">\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"startPicker\"\r\n                formControlName=\"startDate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"startPicker\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #startPicker></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"w-full\">\r\n            <mat-label>End Date</mat-label>\r\n            <br />\r\n            <mat-form-field class=\"w-full\">\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"endPicker\"\r\n                formControlName=\"endDate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"endPicker\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #endPicker></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex justify-end\">\r\n          <button mat-flat-button color=\"warn\" (click)=\"removeExperience(i)\">\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button (click)=\"handleClose()\">Cancel</button>\r\n  <button\r\n    mat-flat-button\r\n    cdkFocusInitial\r\n    color=\"primary\"\r\n    (click)=\"handleSubmit()\"\r\n  >\r\n    {{ editData?.id ? \"Update\" : \"Add\" }}\r\n  </button>\r\n</mat-dialog-actions>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6742e9cb2400b5bdbe8171c17084b4b00ba7180163a2bd3885c9063225ca044faa4f4373b87b1cb38e6aeca21270bf76259e948c30fb22369882b2cbf7616978",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'userManage'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css',\r\n})\r\nexport class AppComponent {\r\n  title = 'userManage';\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav>\r\n  <ul class=\"m-5 flex gap-2\">\r\n    <li>\r\n      <a\r\n        class=\"bg-gray-200 px-2 py-1 rounded\"\r\n        routerLink=\"\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        routerLinkActive=\"bg-green-600 text-white\"\r\n        >User List</a\r\n      >\r\n    </li>\r\n    <li>\r\n      <a\r\n        class=\"bg-gray-200 px-2 py-1 rounded\"\r\n        routerLink=\"/about\"\r\n        routerLinkActive=\"bg-green-600 text-white\"\r\n        >About</a\r\n      >\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-28db78657fdfcca4a53a8c2c46f41dede2313080bc4cef34f98808d7e7c48287a08d17dc72836d56cc85134bfddf317eb277a9eca4e5c1c69a43f09c93886da4",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.css'\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n",
            "styleUrl": "./home.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>home works!</p>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UserDetailComponent",
            "id": "component-UserDetailComponent-5f3a8a6a0f9461af4a2f39013a5aeec06e6fa187ed716d7591c6e4c88a423698394c661e80d0642a3aeeb6102eb7e538c1b57873abeb5b2be422606ccbe1e5c9",
            "file": "src/app/user-detail/user-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-detail",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "userData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "back",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrl: './user-detail.component.css',\r\n  standalone: true,\r\n  imports: [CommonModule, MatButtonModule],\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n  id: null | string = null;\r\n  userData: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe((params) => {\r\n      let id = params.get('id');\r\n\r\n      this.id = id;\r\n\r\n      console.log(typeof id);\r\n\r\n      if (id) {\r\n        this.userService.getUserById(Number(id)).subscribe((res) => {\r\n          this.userData = res;\r\n          console.log(res);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n",
            "styleUrl": "./user-detail.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"m-12\">\r\n  <button mat-flat-button color=\"warn\" (click)=\"back()\">Back</button>\r\n  <table>\r\n    <tr>\r\n      <td class=\"w-1/2\">Name</td>\r\n      <td class=\"w-1/2\">{{ userData?.name }}</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"w-1/2\">Phone</td>\r\n      <td class=\"w-1/2\">{{ userData?.phone }}</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"w-1/2\">Email</td>\r\n      <td class=\"w-1/2\">{{ userData?.email }}</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <div class=\"mt-3\">\r\n    <h1 class=\"text-lg font-semibold mb-3\">Experience</h1>\r\n\r\n    <div *ngFor=\"let exp of userData?.experiences\" class=\"my-3\">\r\n      <table>\r\n        <tr>\r\n          <td class=\"w-1/2\">Company Name</td>\r\n          <td class=\"w-1/2\">{{ exp?.company }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"w-1/2\">Duration</td>\r\n          <td class=\"w-1/2\">{{ exp?.duration }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"w-1/2\">Start Date</td>\r\n          <td class=\"w-1/2\">{{ exp?.startDate | date }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"w-1/2\">End Date</td>\r\n          <td class=\"w-1/2\">{{ exp?.endDate | date }}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "UserListShellComponent",
            "id": "component-UserListShellComponent-462528574cb8f35f8d0f454fa7f7ae8b4049da5ec3535f68c9fe9a7f676c28e76c907b806f83acfcab4aea1d53b159b39c6c2a7514aff497967d23bf995e6a87",
            "file": "src/app/user-list-shell/user-list-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-list-shell",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-list-shell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "signal<any>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "userDialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [
                        {
                            "name": "pageChangeInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageChangeInfo",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "UsersListComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, signal } from '@angular/core';\r\nimport { UsersListComponent } from '../users-list/users-list.component';\r\nimport { UserService } from '../user.service';\r\nimport { SnackbarService } from '../snackbar.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddUserComponent } from '../add-user/add-user.component';\r\n\r\n@Component({\r\n  selector: 'app-user-list-shell',\r\n  templateUrl: './user-list-shell.component.html',\r\n  styleUrl: './user-list-shell.component.css',\r\n  standalone: true,\r\n  imports: [UsersListComponent]\r\n})\r\nexport class UserListShellComponent implements OnInit {\r\n\r\n  // page = 1;\r\n  // limit = 5;\r\n\r\n  dataSource = signal<any>([]);\r\n\r\n  constructor(\r\n    public userService: UserService,\r\n    private snackBarService: SnackbarService,\r\n    public userDialog: MatDialog,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData({\r\n      page: 1, limit: 5\r\n    });\r\n  }\r\n  // page: number = 1, limit: number = 5\r\n  fetchData(pageChangeInfo: {page:number, limit:number}) {\r\n    this.userService\r\n      .getUsers(`?_page=${pageChangeInfo.page}&_limit=${pageChangeInfo.limit}`)\r\n      .subscribe((res) => {\r\n        // console.log(res)\r\n        this.dataSource.set(res);\r\n      });\r\n  }\r\n\r\n  handleDelete(id: number) {\r\n    this.userService.deleteUser(id).subscribe((res) => {\r\n      console.log(res);\r\n      this.fetchData({\r\n        page: 1, limit: 5\r\n      });\r\n      this.snackBarService.openSnackBar('Successfully Deleted.');\r\n    });\r\n  }\r\n\r\n  openDialog(id: number = 0) {\r\n    const dialogRef = this.userDialog.open(AddUserComponent, {\r\n      width: '50%',\r\n      disableClose: true,\r\n      data: { title: 'Add', id },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((val) => {\r\n      if (val == true) {\r\n        this.fetchData({\r\n          page: 1, limit: 5\r\n        })\r\n        // this.fetchData.emit({\r\n        //   page: 1, limit: 5\r\n        // });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./user-list-shell.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<users-list\r\n[dataSource]=\"dataSource()\"\r\n(refetchData)=\"fetchData($any($event))\"\r\n(onDelete)=\"handleDelete($any($event))\"\r\n(onOpenDialog)=\"openDialog($any($event))\"\r\n/>\r\n"
        },
        {
            "name": "UsersListComponent",
            "id": "component-UsersListComponent-89b8f2c7573d0e3b3791b1c1a67bb43cc4d03f1aa37b64539ebc1aafaa8279e8162eca338584eec6a468a2ac07081c03d1f30a30eaa72deca9e0b527d2f034ac",
            "file": "src/app/users-list/users-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "users-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./users-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "onDelete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['serial', 'name', 'email', 'action']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onDelete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                },
                {
                    "name": "onOpenDialog",
                    "defaultValue": "output<void | number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "refetchData",
                    "defaultValue": "output<{ page: number, limit: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "addUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "editUser",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "MatDialogModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild, input, output, viewChild } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { RouterModule } from '@angular/router';\r\nimport { tap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrl: './users-list.component.css',\r\n  standalone: true,\r\n  imports: [\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    MatDialogModule,\r\n  ],\r\n})\r\nexport class UsersListComponent implements AfterViewInit {\r\n  displayedColumns: string[] = ['serial', 'name', 'email', 'action'];\r\n\r\n  dataSource = input<any>();\r\n\r\n  refetchData = output<{ page: number, limit: number }>();\r\n  onDelete = output<number>()\r\n  onOpenDialog = output<void | number>()\r\n  // total = 100;\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    this.paginator.page.pipe(\r\n      tap(() =>\r\n        this.refetchData.emit({\r\n          page: this.paginator.pageIndex,\r\n          limit: this.paginator.pageSize\r\n        })\r\n      )\r\n    ).subscribe();\r\n\r\n  }\r\n\r\n  addUser() {\r\n    this.onOpenDialog.emit();\r\n  }\r\n\r\n  editUser(id: number) {\r\n    this.onOpenDialog.emit(id);\r\n  }\r\n\r\n  handleDelete(id: number) {\r\n    this.onDelete.emit(id)\r\n  }\r\n\r\n  // handlePage(e: PageEvent) {\r\n  //   console.log(e);\r\n  //   this.page = e.pageIndex;\r\n  //   this.limit = e.pageSize;\r\n  //   this.fetchData();\r\n  // }\r\n\r\n\r\n}\r\n\r\n// export interface PeriodicElement {\r\n//   name: string;\r\n//   position: number;\r\n//   weight: number;\r\n//   symbol: string;\r\n// }\r\n\r\n// const ELEMENT_DATA: PeriodicElement[] = [\r\n//   { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n//   { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n//   { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n//   { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n//   { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n//   { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n//   { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n//   { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n//   { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n//   { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n//   { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n//   { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n//   { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n//   { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n//   { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n//   { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n//   { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n//   { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n//   { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n//   { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\r\n// ];\r\n",
            "styleUrl": "./users-list.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"m-12\">\r\n  <button mat-flat-button color=\"primary\" class=\"mb-5\" (click)=\"addUser()\">\r\n    Add User\r\n  </button>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource()\" class=\"mat-elevation-z8\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"serial\">\r\n        <th mat-header-cell *matHeaderCellDef>No.</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef>Name</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"email\">\r\n        <th mat-header-cell *matHeaderCellDef>Email</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef>Action</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <a mat-flat-button color=\"primary\" [routerLink]=\"element.id\"\r\n            >View</a\r\n          >\r\n\r\n          &nbsp;\r\n          <button\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            (click)=\"editUser(element.id)\"\r\n          >\r\n            Edit\r\n          </button>\r\n          &nbsp;<button\r\n            mat-flat-button\r\n            color=\"warn\"\r\n            (click)=\"handleDelete(element.id)\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n\r\n    <mat-paginator\r\n      [length]=\"dataSource().length\"\r\n      [pageSize]=\"5\"\r\n      [pageSizeOptions]=\"[5, 10, 20]\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of periodic elements\"\r\n    >\r\n    <!-- (page)=\"handlePage($event)\" -->\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-2d91bbcdc0c096efe53ef48febe9f22ff319ec699556351cc82e84b8ea000a0fdc6d3a51eee82b9b877eb119070e8d365ac095e84305ac5f1e422038ffdbf717",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\nimport { UserListShellComponent } from './user-list-shell/user-list-shell.component';\r\nimport { UsersListComponent } from \"./users-list/users-list.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'about',\r\n    component: AboutComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    loadComponent: () =>\r\n      \"import('../app/user-list-shell/user-list-shell.component').then(\\r\\n\\\n        (t) => t.UserListShellComponent\\r\\n\\\n      )\",\r\n  },\r\n  {\r\n    path: ':id',\r\n    loadComponent: () =>\r\n      \"import('../app/user-detail/user-detail.component').then(\\r\\n\\\n        (t) => t.UserDetailComponent\\r\\n\\\n      )\",\r\n  },\r\n];\r\n\r\n@NgModule({\r\n    declarations: [AppComponent, AddUserComponent, AboutComponent, HomeComponent],\r\n    bootstrap: [AppComponent],\r\n    providers: [\r\n        provideAnimationsAsync(),\r\n        provideHttpClient(withInterceptorsFromDi())\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        BrowserAnimationsModule,\r\n        MatDialogModule,\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        ReactiveFormsModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatProgressSpinnerModule,\r\n        MatSnackBarModule,\r\n        RouterModule.forRoot(routes),\r\n    ]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "AddUserComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": [],
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/add-user/add-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/snackbar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SnackbarService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/user-detail/user-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/user-list-shell/user-list-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserListShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/users-list/users-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UsersListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}